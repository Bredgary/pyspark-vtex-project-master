<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>vtex.shopstar.python</groupId>
  <artifactId>vtex.shopstar.python</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>MM.dd.HHmm</maven.build.timestamp.format>
    <python_package>sample_pb</python_package>
    <description>Sample protocol buffer bindings for python</description>
    <author>Bredgary Valenzuela</author>
    <author_email>bred.valenzuela@gmail.com</author_email>
    <source_url>https://github.com/urbanairship/mvn-python-packaging.git</source_url>
    <!-- Use a non-existent phase to make sure python tasks only
    run when one of the profiles below is activated. -->
    <python_compile_phase>never</python_compile_phase>
  </properties>

  <!-- Activating any of these profiles will cause the python PB bindings package
  to be built. The profiles can be activated in any of 3 ways:
    * -DPYTHON_BINDINGS on the command line (e.g., "mvn install -DPYTHON_BINDINGS")
    * Defining the PYTHON_BINDINGS environment variable.
Otherwise, no package will be built and developers don't not need to worry about having
python installed, if they don't need python bindings.
    -->
  <profiles>
    <profile>
      <id>python-builder</id>
      <activation>
        <property>
          <name>PYTHON_BINDINGS</name>
        </property>
      </activation>
      <properties>
        <python_compile_phase>compile</python_compile_phase>
      </properties>
    </profile>
    <profile>
      <id>python-builder-en</id>
      <activation>
        <property>
          <name>env.PYTHON_BINDINGS</name>
        </property>
      </activation>
      <properties>
        <python_compile_phase>compile</python_compile_phase>
      </properties>
    </profile>
    <profile>
      <id>jenkins-builder</id>
      <activation>
        <property>
          <name>env.JENKINS_URL</name>
        </property>
      </activation>
      <properties>
        <python_compile_phase>compile</python_compile_phase>
      </properties>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <!--
  SNAPSHOT is considered a 'pre-release' tag (in setuptools terminology),
  so we replace it with 'preview'.
  http://peak.telecommunity.com/DevCenter/setuptools#specifying-your-project-s-version
  -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
      </plugin>
      <plugin>
        <!-- Make sure destination directories for protoc output
        exist. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>setup.py</include>
          <include>MANIFEST.in</include>
          <include>requirements.txt</include>
        </includes>
        <targetPath>${project.build.directory}/generated-sources/python</targetPath>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>__init__.py</include>
        </includes>
        <targetPath>${project.build.directory}/generated-sources/python/${python_package}</targetPath>
        <filtering>true</filtering>
      </resource>
      <resource>
        <!-- Ship a copy of PB definition with the python package.-->
        <directory>src/main/resources</directory>
        <includes><include>*.proto</include></includes>
        <targetPath>${project.build.directory}/generated-sources/python/${python_package}</targetPath>
        <filtering>false</filtering>
      </resource>
      <resource>
        <!-- Ship a copy of PB definition with the java jar.  This would be done by default but the override above prevents it so we have to be explicit -->
        <directory>src/main/resources</directory>
        <includes><include>*.proto</include></includes>
        <targetPath>${project.build.directory}/classes</targetPath>
        <filtering>false</filtering>
      </resource>
    </resources>
  </build>

  <dependencies>
    <!-- general system dependencies -->
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>2.5.0</version>
    </dependency>
  </dependencies>
</project>